AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Serverless Chat
Parameters:
  TableName:
    Type: String
    Default: connections
    Description: The name of the new DynamoDB to store connections.
Resources:
  ConnectionsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
      - AttributeName: connectionId
        AttributeType: S
      KeySchema:
      - AttributeName: connectionId
        KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      SSESpecification:
        SSEEnabled: true
      TableName:
        Ref: TableName
  ApiGateway:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: ApiGateway
      ProtocolType: WEBSOCKET
      RouteSelectionExpression: $request.body.action
  SendMessageFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: ./src/functions/send-message.handler
      MemorySize: 256
      Runtime: nodejs12.x
      Environment:
        Variables:
          TABLE_NAME:
            Ref: TableName
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: TableName
      - Statement:
        - Effect: Allow
          Action:
          - execute-api:ManageConnections
          Resource:
          - Fn::Sub: arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiGateway}/*
      CodeUri: s3://abajowski/f26a869b22f2c09ffdc32804b0c4270d
  IntegrationSendMessage:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: ApiGateway
      Description: Send Integration
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${SendMessageFunction.Arn}/invocations
  RouteSendMessage:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: ApiGateway
      RouteKey: sendmessage
      AuthorizationType: NONE
      OperationName: RouteSendMessage
      Target:
        Fn::Join:
        - /
        - - integrations
          - Ref: IntegrationSendMessage
  SendMessagePermission:
    Type: AWS::Lambda::Permission
    DependsOn:
    - ApiGateway
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Ref: SendMessageFunction
      Principal: apigateway.amazonaws.com
  OnConnectFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: ./src/functions/connect.handler
      MemorySize: 256
      Runtime: nodejs12.x
      Environment:
        Variables:
          TABLE_NAME:
            Ref: TableName
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: TableName
      CodeUri: s3://abajowski/f26a869b22f2c09ffdc32804b0c4270d
  IntegrationConnect:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: ApiGateway
      Description: Connect Integration
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OnConnectFunction.Arn}/invocations
  RouteConnect:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: ApiGateway
      RouteKey: $connect
      AuthorizationType: NONE
      OperationName: RouteConnect
      Target:
        Fn::Join:
        - /
        - - integrations
          - Ref: IntegrationConnect
  OnConnectPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
    - ApiGateway
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Ref: OnConnectFunction
      Principal: apigateway.amazonaws.com
  OnDisconnectFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: ./src/functions/disconnect.handler
      MemorySize: 256
      Runtime: nodejs12.x
      Environment:
        Variables:
          TABLE_NAME:
            Ref: TableName
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: TableName
      CodeUri: s3://abajowski/f26a869b22f2c09ffdc32804b0c4270d
  IntegrationDisconnect:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: ApiGateway
      Description: Disconnect Integration
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OnDisconnectFunction.Arn}/invocations
  RouteDisconnect:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: ApiGateway
      RouteKey: $disconnect
      AuthorizationType: NONE
      OperationName: RouteDisconnect
      Target:
        Fn::Join:
        - /
        - - integrations
          - Ref: IntegrationDisconnect
  OnDisconnectPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
    - ApiGateway
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Ref: OnDisconnectFunction
      Principal: apigateway.amazonaws.com
  Deployment:
    Type: AWS::ApiGatewayV2::Deployment
    DependsOn:
    - RouteConnect
    - RouteSendMessage
    - RouteDisconnect
    Properties:
      ApiId:
        Ref: ApiGateway
  Stage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      StageName: Prod
      Description: Prod Stage
      DeploymentId:
        Ref: Deployment
      ApiId:
        Ref: ApiGateway
Outputs:
  WebSocketURI:
    Description: WSS Protocol URI to connect to
    Value:
      Fn::Join:
      - ''
      - - wss://
        - Ref: ApiGateway
        - .execute-api.
        - Ref: AWS::Region
        - .amazonaws.com/
        - Ref: Stage
